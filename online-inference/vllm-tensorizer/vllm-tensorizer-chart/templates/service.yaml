apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: {{ .Values.serving.name}}
  annotations:
    networking.knative.dev/ingress-class: kourier.ingress.networking.knative.dev

  labels:
    knative.coreweave.cloud/ingress: kourier.ingress.networking.knative.dev
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/target-burst-capacity: "-1"
        autoscaling.knative.dev/target-utilization-percentage: "70"
        autoscaling.knative.dev/window: "60s"
        autoscaling.knative.dev/panic-window-percentage: "10"
        autoscaling.knative.dev/panic-threshold-percentage: "200"
    spec:
      timeoutSeconds: 300
      containerConcurrency: 30
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: gpu.nvidia.com/class
                    operator: In
                    values:
                      - RTX_A5000 # Not recommended for model sizes exceeding 7B params fp32 or 12B params fp16
                  - key: topology.kubernetes.io/region
                    operator: In
                    values:
                      - LGA1
      containers:
        - name: main
          image: ghcr.io/coreweave/ml-containers/vllm-tensorizer:999655b-5febd752209bd0bf032b81bfcf692ad20aedf705
          command: ["python3", "-m", "vllm.entrypoints.openai.api_server"]
          args:
            - "--host"
            - "0.0.0.0"
            - "--model"
            - "{{ .Values.serving.model }}"
            - "--load-format"
            - "tensorizer"
            - "--tensorizer-uri"
            - "{{ .Values.serving.tensorizer_uri }}"
          env:
            ## Omitting functionality for specifying S3_ENDPOINT_URL for now
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.serialization.s3_access_key }}"
                  key: "key"
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.serialization.s3_secret_key }}"
                  key: "key"
          resources:
            requests:
              cpu: 4
              memory: 124Gi
              nvidia.com/gpu: 1
            limits:
              cpu: 4
              memory: 124Gi
              nvidia.com/gpu: 1
          ports:
            - protocol: TCP
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /v1/models
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10